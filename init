#!/usr/bin/env php
<?php
    /**
     * Yii Application Initialization Tool
     *
     * In order to run in non-interactive mode:
     *
     * init --env=Development --overwrite=n
     *
     * @author    Alexander Makarov <sam@rmcreative.ru>
     *
     * @link      http://www.yiiframework.com/
     * @copyright Copyright (c) 2008 Yii Software LLC
     * @license   http://www.yiiframework.com/license/
     */




    if(!extension_loaded('openssl')){
        die('The OpenSSL PHP extension is required by Yii2.');
    }

    $root = str_replace('\\', '/', __DIR__);
    $envs = require("$root/environments/index.php");
    $envNames = array_keys($envs);
    define('ROOT_DIR', $root);
    define('INIT_DIR', $root.'/initialization/');
    define('CUSTOM_SETTING', $root.'/common/config/custom.php');
    require_once INIT_DIR.'init_functions.php';

    $params = getParams();

    echo "Yii Application Initialization Tool v1.0\n\n";
    $envName = null;
    if(empty($params['env']) || $params['env'] === '1'){
        echo "Which environment do you want the application to be initialized in?\n\n";
        foreach($envNames as $i => $name){
            echo "  [$i] $name\n";
        }
        echo "\n  Your choice [0-".(count($envs) - 1).', or "q" to quit] ';
        $answer = trim(fgets(STDIN));

        if(!ctype_digit($answer) || !in_array($answer, range(0, count($envs) - 1))){
            echo "\n  Quit initialization.\n";
            exit(0);
        }

        if(isset($envNames[$answer])){
            $envName = $envNames[$answer];
        }
    }else{
        $envName = $params['env'];
    }

    if(!in_array($envName, $envNames)){
        $envsList = implode(', ', $envNames);
        echo "\n  $envName is not a valid environment. Try one of the following: $envsList. \n";
        exit(2);
    }

    $env = $envs[$envName];

    if(empty($params['env'])){
        echo "\n  Initialize the application under '{$envNames[$answer]}' environment? [yes|no] ";
        $answer = trim(fgets(STDIN));
        if(strncasecmp($answer, 'y', 1)){
            echo "\n  Quit initialization.\n";
            exit(0);
        }
    }

    echo "\n  Start initialization ...\n\n";
    // base init
    $files = getFileList("$root/environments/{$env['path']}");
    if(isset($env['skipFiles'])){
        $skipFiles = $env['skipFiles'];
        array_walk($skipFiles, function(&$value) use ($env, $root){
            $value = "$root/$value";
        });
        $files = array_diff($files, array_intersect_key($env['skipFiles'], array_filter($skipFiles, 'file_exists')));
    }
    $all = false;
    foreach($files as $file){
        if(!copyFile($root, "environments/{$env['path']}/$file", $file, $all, $params)){
            break;
        }
    }

    $callbacks = [
        'setCookieValidationKey',
        'setWritable',
        'setExecutable',
        'createSymlink'
    ];
    foreach($callbacks as $callback){
        if(!empty($env[$callback])){
            $callback($root, $env[$callback]);
        }
    }
    // custom init
    echo "\n ".formatMessage('Do you want set custom setting?', ['bold', 'fg-green'])." [yes|no]: ";
    $answer = trim(fgets(STDIN));
    if(strncasecmp($answer, 'y', 1)){
        echo "\n  ... initialization completed.\n\n";
        exit(0);
    }
    require_once INIT_DIR.'set_custom_setting.php';
    $actions = [
            'setAppName', 'setDbSetting', 'setEmailSetting'
    ];


    if(!empty($actions)){
        foreach($actions as $action){
            if(function_exists($action)){
                $action($customSetting);
            }
        }
    }


    echo "\n  ... initialization completed.\n\n";


